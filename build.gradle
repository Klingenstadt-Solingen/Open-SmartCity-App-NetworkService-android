plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'kotlin-parcelize'
    id 'org.jetbrains.dokka'
    id 'kotlin-kapt'
    id 'com.google.dagger.hilt.android'
    id 'org.jetbrains.kotlin.plugin.compose'
}

android {
    namespace 'de.osca.android.networkservice'

    defaultConfig {
        minSdk 26
        compileSdk 35
        targetSdk 35
        versionCode 1
        versionName version_networkservice
        proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
    }

    buildTypes {
        release {
            minifyEnabled false
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8

        kotlin {
            kotlinOptions {
                freeCompilerArgs += "-opt-in=kotlin.RequiresOptIn"
            }
        }
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation project(":oscaessentials-android")

    implementation 'androidx.core:core-ktx:1.15.0'
    implementation 'androidx.appcompat:appcompat:1.7.0'
    implementation 'com.google.android.material:material:1.12.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.2.1'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.8.7'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.8.7'
    implementation "androidx.navigation:navigation-fragment-ktx:$compose_navigation_version"
    implementation "androidx.navigation:navigation-ui-ktx:$compose_navigation_version"

    // Gson
    implementation("com.google.code.gson:gson:2.10.1")

    // OkHttp
    implementation("com.squareup.okhttp3:okhttp:$okhttp3_version")
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp3_version"

    // Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlin_coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlin_coroutines_version"

    // Retrofit
    implementation("com.squareup.retrofit2:retrofit:2.11.0")
    implementation 'com.squareup.retrofit2:converter-gson:2.10.0'

    // Compose Hilt / DI
    implementation("androidx.hilt:hilt-navigation-compose:1.2.0")
    implementation "com.google.dagger:hilt-android:$hilt_version"
    // kapt 'androidx.hilt:hilt-compiler:1.2.0'
    kapt "com.google.dagger:hilt-android-compiler:$hilt_version"
    testImplementation("com.google.dagger:hilt-android-testing:$hilt_version")
    kaptTest("com.google.dagger:hilt-android-compiler:$hilt_version")
    androidTestImplementation("com.google.dagger:hilt-android-testing:$hilt_version")
    kaptAndroidTest("com.google.dagger:hilt-android-compiler:$hilt_version")

    // Test
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.2.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.6.1'
    testImplementation("com.squareup.okhttp3:mockwebserver:$okhttp3_version")
    implementation "co.infinum:retromock:1.1.1"

    // Parse
    implementation "com.github.parse-community.Parse-SDK-Android:parse:$parse_version"
    implementation "com.github.parse-community.Parse-SDK-Android:fcm:$parse_version"
    implementation "com.github.parse-community.Parse-SDK-Android:ktx:$parse_version"
    // Parse LiveQuery
    implementation "com.github.parse-community:ParseLiveQuery-Android:1.2.2"


    // Firebase / FCM
    implementation platform('com.google.firebase:firebase-bom:33.10.0')

    implementation 'javax.annotation:javax.annotation-api:1.3.2'
}
